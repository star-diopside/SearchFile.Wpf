<UserControl x:Class="SearchFile.Module.Views.SearchFileView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:action="clr-namespace:SearchFile.Module.Views.Action"
             xmlns:converter="clr-namespace:SearchFile.Module.Views.Converter"
             xmlns:vm="clr-namespace:SearchFile.Module.ViewModels"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance {x:Type vm:SearchFileViewModel}}"
             prism:ViewModelLocator.AutoWireViewModel="True">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/Image.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <LinearGradientBrush x:Key="ActiveCaptionBrush" StartPoint="0,0.5" EndPoint="1,0.5">
                <GradientStop Color="{DynamicResource {x:Static SystemColors.ActiveCaptionColorKey}}"/>
                <GradientStop Color="{DynamicResource {x:Static SystemColors.GradientActiveCaptionColorKey}}" Offset="1"/>
            </LinearGradientBrush>
            <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                <Setter Property="Padding" Value="16,1"/>
            </Style>
            <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                <Setter Property="ToolTip" Value="{Binding (Validation.Errors)/ErrorContent, RelativeSource={RelativeSource Self}}"/>
            </Style>
            <Style TargetType="Menu" BasedOn="{StaticResource {x:Static ToolBar.MenuStyleKey}}"/>
            <Style x:Key="IconStyle" TargetType="Rectangle">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.5"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="ActiveCaptionTextBlockStyle" TargetType="TextBlock">
                <Setter Property="Background" Value="{StaticResource ActiveCaptionBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}"/>
            </Style>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <converter:BooleanNegationConverter x:Key="BooleanNegationConverter"/>
            <converter:EnumBooleanConverter x:Key="EnumBooleanConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>
    <i:Interaction.Triggers>
        <prism:InteractionRequestTrigger SourceObject="{Binding ExceptionRequest, Mode=OneWay}">
            <action:ExceptionAction/>
        </prism:InteractionRequestTrigger>
        <prism:InteractionRequestTrigger SourceObject="{Binding ChooseFolderRequest, Mode=OneWay}">
            <action:ChooseFolderAction/>
        </prism:InteractionRequestTrigger>
        <prism:InteractionRequestTrigger SourceObject="{Binding DeleteFileRequest, Mode=OneWay}">
            <action:DeleteFileAction/>
        </prism:InteractionRequestTrigger>
        <prism:InteractionRequestTrigger SourceObject="{Binding SaveFileRequest, Mode=OneWay}">
            <action:SaveFileAction/>
        </prism:InteractionRequestTrigger>
    </i:Interaction.Triggers>
    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="ファイル(_F)">
                <MenuItem Header="リストのクリア(_C)" Command="{Binding ClearResultsCommand, Mode=OneWay}" IsEnabled="{Binding IsSearching, Converter={StaticResource BooleanNegationConverter}, Mode=OneWay}">
                    <MenuItem.Icon>
                        <Rectangle Style="{StaticResource IconStyle}" Width="16" Height="16" Fill="{StaticResource NewFileIcon}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="ディレクトリの選択(_S)..." Command="{Binding ChooseFolderCommand, Mode=OneWay}">
                    <MenuItem.Icon>
                        <Rectangle Style="{StaticResource IconStyle}" Width="16" Height="16" Fill="{StaticResource OpenFolderIcon}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="名前を付けて保存(_A)..." Command="{Binding SaveResultsCommand, Mode=OneWay}">
                    <MenuItem.Icon>
                        <Rectangle Style="{StaticResource IconStyle}" Width="16" Height="16" Fill="{StaticResource SaveAsIcon}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="終了(_X)">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <action:WindowCloseAction/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="編集(_E)">
                <MenuItem Header="検索結果をコピー(_C)" Command="{Binding CopyResultsCommand, Mode=OneWay}" IsEnabled="{Binding ExistsResults, Mode=OneWay}">
                    <MenuItem.Icon>
                        <Rectangle Style="{StaticResource IconStyle}" Width="16" Height="16" Fill="{StaticResource CopyIcon}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="すべて選択(_A)" Command="{Binding SelectAllCommand, Mode=OneWay}" IsEnabled="{Binding ExistsResults, Mode=OneWay}"/>
                <MenuItem Header="選択の切り替え(_R)" Command="{Binding ReverseSelectionCommand, Mode=OneWay}" IsEnabled="{Binding ExistsResults, Mode=OneWay}"/>
            </MenuItem>
        </Menu>
        <ToolBarTray DockPanel.Dock="Top">
            <ToolBar>
                <Button Command="{Binding ClearResultsCommand, Mode=OneWay}">
                    <Rectangle Style="{StaticResource IconStyle}" Width="16" Height="16" Fill="{StaticResource NewFileIcon}"/>
                </Button>
                <Button Command="{Binding ChooseFolderCommand, Mode=OneWay}">
                    <Rectangle Style="{StaticResource IconStyle}" Width="16" Height="16" Fill="{StaticResource OpenFolderIcon}"/>
                </Button>
                <Button Command="{Binding SaveResultsCommand, Mode=OneWay}">
                    <Rectangle Style="{StaticResource IconStyle}" Width="16" Height="16" Fill="{StaticResource SaveAsIcon}"/>
                </Button>
                <Separator/>
                <Button Command="{Binding CopyResultsCommand, Mode=OneWay}" IsEnabled="{Binding ExistsResults, Mode=OneWay}">
                    <Rectangle Style="{StaticResource IconStyle}" Width="16" Height="16" Fill="{StaticResource CopyIcon}"/>
                </Button>
                <Separator/>
                <Button>
                    <Rectangle Style="{StaticResource IconStyle}" Width="16" Height="16" Fill="{StaticResource CutIcon}"/>
                </Button>
                <Button>
                    <Rectangle Style="{StaticResource IconStyle}" Width="16" Height="16" Fill="{StaticResource CopyIcon}"/>
                </Button>
                <Button>
                    <Rectangle Style="{StaticResource IconStyle}" Width="16" Height="16" Fill="{StaticResource PasteIcon}"/>
                </Button>
            </ToolBar>
        </ToolBarTray>
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem DockPanel.Dock="Right" Margin="0,0,16,0" VerticalContentAlignment="Stretch" Visibility="{Binding IsSearching, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">
                <ProgressBar Width="100" IsIndeterminate="True"/>
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock Text="{Binding Status, Mode=OneWay}"/>
            </StatusBarItem>
        </StatusBar>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="300" MinWidth="300"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <ListView Grid.RowSpan="3" ItemsSource="{Binding ResultsView}" SelectionChanged="ResultsViewSelectionChanged">
                <ListView.View>
                    <GridView>
                        <i:Interaction.Triggers>
                            <prism:InteractionRequestTrigger SourceObject="{Binding AdjustColumnWidthRequest, Mode=OneWay}">
                                <action:AdjustColumnWidthAction/>
                            </prism:InteractionRequestTrigger>
                        </i:Interaction.Triggers>
                        <GridViewColumn>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{Binding IconSource, Mode=OneWay}" VerticalAlignment="Center" Margin="0,0,4,0" Width="16" Height="16"/>
                                        <TextBlock Text="{Binding FileName, Mode=OneWay}" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                            <GridViewColumnHeader Content="ファイル名" Command="{Binding SortResultsCommand, Mode=OneWay}" CommandParameter="FileName"/>
                        </GridViewColumn>
                        <GridViewColumn DisplayMemberBinding="{Binding Extension, Mode=OneWay}">
                            <GridViewColumnHeader Content="拡張子" Command="{Binding SortResultsCommand, Mode=OneWay}" CommandParameter="Extension"/>
                        </GridViewColumn>
                        <GridViewColumn DisplayMemberBinding="{Binding DirectoryName, Mode=OneWay}">
                            <GridViewColumnHeader Content="ディレクトリ" Command="{Binding SortResultsCommand, Mode=OneWay}" CommandParameter="DirectoryName"/>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=OneWay}"/>
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>
            <GridSplitter Grid.Column="1" Grid.RowSpan="3" Width="4" HorizontalAlignment="Stretch"/>
            <Border Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" BorderThickness="1">
                <StackPanel>
                    <Border BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" BorderThickness="0,0,0,1">
                        <TextBlock Text="検索条件" Padding="4,2" Style="{DynamicResource ActiveCaptionTextBlockStyle}"/>
                    </Border>
                    <Label Content="ディレクトリ名(_D):" Target="{Binding ElementName=directoryName, Mode=OneWay}" Padding="0" Margin="8,8,8,0"/>
                    <TextBox x:Name="directoryName" Margin="8,0" Text="{Binding Condition.TargetDirectory, UpdateSourceTrigger=PropertyChanged}"/>
                    <Button Content="ディレクトリの選択" Margin="8" HorizontalAlignment="Right" IsDefault="{Binding IsFocused, ElementName=directoryName, Mode=OneWay}" Command="{Binding ChooseFolderCommand, Mode=OneWay}"/>
                    <Label Content="ファイル名(_F):" Target="{Binding ElementName=fileName, Mode=OneWay}" Padding="0" Margin="8,0"/>
                    <TextBox x:Name="fileName" Margin="8,0,8,8" Text="{Binding Condition.FileName, UpdateSourceTrigger=PropertyChanged}"/>
                    <StackPanel Orientation="Horizontal" Margin="8,0" HorizontalAlignment="Center">
                        <RadioButton Content="ワイルドカード" Margin="8,0" HorizontalAlignment="Center" IsChecked="{Binding Condition.MatchType, ConverterParameter=Wildcard, Converter={StaticResource EnumBooleanConverter}}"/>
                        <RadioButton Content="正規表現" Margin="8,0" HorizontalAlignment="Center" IsChecked="{Binding Condition.MatchType, ConverterParameter=Regex, Converter={StaticResource EnumBooleanConverter}}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="8,16,8,0" HorizontalAlignment="Right">
                        <Button IsDefault="{Binding IsFocused, Converter={StaticResource BooleanNegationConverter}, ElementName=directoryName, Mode=OneWay}" Command="{Binding SearchCommand, Mode=OneWay}">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsSearching}" Value="False">
                                            <Setter Property="Content" Value="検索開始"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsSearching}" Value="True">
                                            <Setter Property="Content" Value="検索中止"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button Content="リストのクリア" Margin="8,0,0,0" Command="{Binding ClearResultsCommand, Mode=OneWay}" IsEnabled="{Binding IsSearching, Converter={StaticResource BooleanNegationConverter}, Mode=OneWay}"/>
                    </StackPanel>
                </StackPanel>
            </Border>
            <GridSplitter Grid.Row="1" Grid.Column="2" Height="4" HorizontalAlignment="Stretch"/>
            <Border Grid.Row="2" Grid.Column="2" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" BorderThickness="1">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Border Grid.ColumnSpan="2" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" BorderThickness="0,0,0,1">
                        <TextBlock Text="アクション" Padding="4,2" Style="{DynamicResource ActiveCaptionTextBlockStyle}"/>
                    </Border>
                    <Button Grid.Row="1" Content="すべて選択" Margin="8,16,4,8" Command="{Binding SelectAllCommand, Mode=OneWay}" IsEnabled="{Binding ExistsResults, Mode=OneWay}"/>
                    <Button Grid.Row="1" Grid.Column="1" Content="選択の切り替え" Margin="4,16,8,8" Command="{Binding ReverseSelectionCommand, Mode=OneWay}" IsEnabled="{Binding ExistsResults, Mode=OneWay}"/>
                    <Button Grid.Row="2" Grid.ColumnSpan="2" Content="選択ファイルを削除する" Margin="8,8,8,0" Command="{Binding DeleteSelectionFileCommand, Mode=OneWay}" IsEnabled="{Binding ExistsResults, Mode=OneWay}"/>
                    <CheckBox Grid.Row="3" Grid.ColumnSpan="2" Content="削除時にファイルをごみ箱に移す" HorizontalAlignment="Right" Margin="8" IsChecked="{Binding RecyclesDeleteFiles}" IsEnabled="{Binding ExistsResults, Mode=OneWay}"/>
                </Grid>
            </Border>
        </Grid>
    </DockPanel>
</UserControl>
